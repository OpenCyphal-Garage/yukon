name: 'Yukon application builder'

# Builds Yukon OpenCyphal IDE artifacts

on:
  push:
    branches:
      - main

# Ensures that only one workflow is running at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #
  # Yukon build
  #
  yukon-build:
    name: Build Yukon
    if: startsWith(github.ref, 'refs/heads/')
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      yukon-version: ${{ steps.release-version.outputs.version }}
    steps:
      - name: Checking out
        uses: actions/checkout@v3

      - name: Installing Python3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Setting up Node.js
        uses: actions/setup-node@v3

      - name: Installing dependencies
        run: |
          python3 -m venv venv
          if [ "$RUNNER_OS" == "Linux" ]; then
            source venv/bin/activate
          elif [ "$RUNNER_OS" == "Windows" ]; then
            venv/Scripts/activate.bat
          else
            echo "${{ runner.os }} not supported"
            exit 1
          fi
          pip install wheel yakut
          yakut compile -O.compiled ${{ env.master_path }}
          pip install nox
          pip install -r requirements.txt -r dev-requirements.txt
        env:
          master_path: https://github.com/OpenCyphal/public_regulated_data_types/archive/refs/heads/master.zip
        shell: bash

      - name: Testing GUI (quality check)
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            source venv/bin/activate
          elif [ "$RUNNER_OS" == "Windows" ]; then
            venv/Scripts/activate.bat
          else
            echo "${{ runner.os }} not supported"
            exit 1
          fi
          nox -s mypy
          nox -s black
          nox -s pylint
          if [ "$RUNNER_OS" == "Linux" ]; then
            nox -s pytest
          fi
        shell: bash

      - name: Building release
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            source venv/bin/activate
            python3.10 build_exe.py
          elif [ "$RUNNER_OS" == "Windows" ]; then
            venv/Scripts/activate.bat
            python3 build_exe.py
          else
            echo "${{ runner.os }} not supported"
          fi
        shell: bash

      - id: release-version
        name: Extracting release version
        run: echo "version=$(python3 -c 'from yukon.version import __version__; print(__version__)')" >> $GITHUB_OUTPUT

      - name: Setting artifact name
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            echo "architecture=linux-x86_64_ubuntu-22.04-manjaro" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            echo "architecture=linux-x86_64" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            echo "architecture=windows-x86_64" >> $GITHUB_ENV
          else
            echo "architecture=other" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Storing artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.architecture }}
          path: |
            dist/Yukon
            dist/Yukon.exe
          retention-days: 1

  #
  # Deploy artifacts to files.zubax.com
  #
  deploy-to-zubax:
    name: Deploy
    needs: yukon-build
    uses: ./.github/workflows/deploy-to-zubax.yml
    with:
      product: org.opencyphal.yukon
      version: ${{ needs.yukon-build.outputs.yukon-version }}
    secrets: inherit

  #
  # Deploy artifacts to GitHub Releases
  #
  deploy-to-gh-releases:
    name: Deploy
    needs: yukon-build
    uses: ./.github/workflows/deploy-to-gh-releases.yml
    with:
      version: ${{ needs.yukon-build.outputs.yukon-version }}
    secrets: inherit


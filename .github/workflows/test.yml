name: Yukon tests
on: push
jobs:
  python-quality-check:
    runs-on: ubuntu-22.04
    steps:
      - name: checking out
        uses: actions/checkout@v2
      - name: Installing Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: installing dependencies
        run: |
          pip install yakut
          yakut compile -O.compiled https://github.com/OpenCyphal/public_regulated_data_types/archive/refs/heads/master.zip
          pip install nox
          python3.10 -m pip install -r requirements.txt -r dev-requirements.txt
      - name: Testing GUI
        run: |
          PYTHONPATH=".:.." nox -s mypy
          PYTHONPATH=".:.." nox -s black
          PYTHONPATH=".:.." nox -s pylint
  immediate-release:
    runs-on: ubuntu-22.04
    if:
      contains(github.event.head_commit.message, '#release')
    steps:
      - name: checking out
        uses: actions/checkout@v2
      - name: Installing Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: installing dependencies
        run: |
          pip install yakut
          yakut compile -O.compiled https://github.com/OpenCyphal/public_regulated_data_types/archive/refs/heads/master.zip
          pip install nox
          python3.10 -m pip install -r requirements.txt -r dev-requirements.txt
      - name: Testing GUI
        run: |
          PYTHONPATH=".:.." nox -s mypy
          PYTHONPATH=".:.." nox -s black
          PYTHONPATH=".:.." nox -s pylint
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/private.key
          chmod 600 ~/.ssh/private.key
          cat >>~/.ssh/config <<END
          Host target
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/private.key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Build the release using the script, which will call pyinstaller
        continue-on-error: false
        run: |
          python3.10 build_exe.py
      - name: Deploy the release
        if: ${{ success() }}
        run: |
          YUKON_VERSION_1=$(python3 -c "from yukon.version import __version__; print(__version__)")
          YUKON_VERSION=$(python3 -c "from yukon.version import __version__; print(__version__)")
          YUKON_TARGET_DIR=/var/www/files/products/com.zubax.yukon/testing_release/$YUKON_VERSION/linux-x86_64
          ssh target "mkdir -p $YUKON_TARGET_DIR; echo $YUKON_TARGET_DIR"
          scp $YUKON_ARTIFACT target:$YUKON_TARGET_DIR
        env:
          YUKON_ARTIFACT: dist/Yukon

name: 'Yukon application builder'

# Builds Yukon OpenCyphal IDE artifacts

on:
  push:
    branches:
      - main
      - issue-182

# Ensures that only one workflow is running at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #
  # Yukon build
  #
  yukon-build:
    name: Build Yukon
    if: startsWith(github.ref, 'refs/heads/')
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, windows-2019-npcap]
    runs-on: ${{ matrix.os }}
    env:
      python_version: 3.11
    outputs:
      yukon_version: ${{ steps.release-version.outputs.yukon_version }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Python3
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
          cache: "pip"

      - name: Setup Node.js
        uses: actions/setup-node@v3

      # Set architecture specific variables
      - name: Set architecture variables
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "yukon_activate=source venv/bin/activate" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "yukon_activate=venv/Scripts/activate.bat" >> $GITHUB_ENV
          else
            echo "${{ runner.os }} not supported"
            exit 1
          fi
        shell: bash

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo update-alternatives --install /usr/bin/python python /opt/hostedtoolcache/Python/${{ env.python_version }}.*/x64/bin/python${{ env.python_version }} 1
            sudo update-alternatives --install /usr/bin/python3 python3 /opt/hostedtoolcache/Python/${{ env.python_version }}.*/x64/bin/python${{ env.python_version }} 1
          fi
          python3 -m venv venv
          ${{ env.yukon_activate }}
          pip install wheel yakut
          yakut compile -O.compiled ${{ env.master_path }}
          pip install nox
          pip install -r requirements.txt -r dev-requirements.txt
        env:
          master_path: https://github.com/OpenCyphal/public_regulated_data_types/archive/refs/heads/master.zip
        shell: bash

      - name: Test GUI (quality check)
        run: |
          ${{ env.yukon_activate }}
          nox -s mypy
          nox -s black
          nox -s pylint
          #nox -s pytest
          if [ "$RUNNER_OS" == "Linux" ]; then
            nox -s pytest
          fi

        shell: bash

      - name: Build release
        run: |
          ${{ env.yukon_activate }}
          python3 build_exe.py

      - id: release-version
        name: Extracting release version
        run: echo "yukon_version=$(python3 -c 'from yukon.version import __version__; print(__version__)')" >> $GITHUB_OUTPUT

      - name: Set artifact name
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            echo "architecture=linux-x86_64_ubuntu-22.04-manjaro" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            echo "architecture=linux-x86_64" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "windows-2019-npcap" ]; then
            echo "architecture=windows-x86_64" >> $GITHUB_ENV
          else
            echo "architecture=other" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Store artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.architecture }}
          path: |
            dist/Yukon
            dist/Yukon.exe
          retention-days: 1

  deploy-to-zubax:
    name: Deploy to fileserver
    needs: yukon-build
    runs-on: ubuntu-latest
    steps:
      - name: Test variable
        env:
          yukon_version: ${{ needs.yukon-build.outputs.yukon_version }}
        run: echo ${{ env.yukon_version }}
    

  #
  # Deploy artifacts to files.zubax.com
  #
  #deploy-to-zubax:
  #  name: Deploy
  #  needs: yukon-build
  #  uses: ./.github/workflows/deploy-to-zubax.yml
  #  with:
  #    product: org.opencyphal.yukon
  #    version: ${{ needs.yukon-build.outputs.yukon-version }}
  #  secrets: inherit

  #
  # Deploy artifacts to GitHub Releases
  #
  #deploy-to-gh-releases:
  #  name: Deploy
  #  needs: yukon-build
  #  uses: ./.github/workflows/deploy-to-gh-releases.yml
  #  with:
  #    version: ${{ needs.yukon-build.outputs.yukon-version }}
  #  secrets: inherit

name: 'Yukon application builder'

# Builds Yukon OpenCyphal IDE artifacts

on:
  push:
    branches:
#      - main
      - issue-200

# This ensures that only one workflow is running
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  #
  # Yukon build
  #
  yukon-build:
    name: Build Yukon
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      yukon-version: ${{ steps.release-version.outputs.version }}
      artifact-name: ${{ steps.set-name.outputs.artifact-name }}
    steps:
      - name: Checking out
        uses: actions/checkout@v3

      - name: Installing Python3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Setting up Node.js
        uses: actions/setup-node@v3

      - name: Installing Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt install libgfortran5 libquadmath0
          pip install yakut
          yakut compile -O.compiled $master_path
          python3.10 -m venv venv
          source venv/bin/activate
          pip install nox
          pip install -r requirements.txt -r dev-requirements.txt
        env:
          master_path: https://github.com/OpenCyphal/public_regulated_data_types/archive/refs/heads/master.zip

      - name: Installing Windows dependencies
        if: runner.os == 'Windows'
        run: |
          python3 -m venv venv
          venv\Scripts\activate.bat
          pip install wheel yakut
          yakut compile -O.compiled $master_path
          pip install nox
          python3 --version
          pip install -r requirements.txt -r dev-requirements.txt
        env:
          master_path: https://github.com/OpenCyphal/public_regulated_data_types/archive/refs/heads/master.zip

      - name: Testing GUI
        if: runner.os == 'Windows'
        run: |
          venv\Scripts\activate.bat
          $Env:PYTHONPATH = ".:.."
          nox -s mypy
          nox -s black
          nox -s pylint

      - name: Building Linux release
        if: runner.os == 'Linux'
        run: |
          source venv/bin/activate
          python3.10 build_exe.py

      - name: Building Windows release
        if: runner.os == 'Windows'
        run: |
          venv\Scripts\activate.bat
          python3 build_exe.py

      - id: release-version
        name: Extracting release version
        run: echo "version=$(python3 -c 'from yukon.version import __version__; print(__version__)')" >> $GITHUB_OUTPUT

      - name: Storing artifact
        uses: actions/upload-artifact@v3
        with:
          name: Yukon-${{ matrix.os }}
          path: dist/Yukon
          retention-days: 1

      - id: set-name
        name: Saving artifact name
        run: |
          echo "artifact-name=Yukon-${{ matrix.os }}" >> $GITHUB_OUTPUT

  #
  # Deploy artifacts to files.zubax.com
  #
  deploy-to-zubax:
    name: Deploy
    needs: yukon-build
    uses: ./.github/workflows/deploy-to-zubax.yml
    with:
      product: org.opencyphal.yukon
      version: ${{ needs.yukon-build.outputs.yukon-version }}
      architecture: linux-x86_64
      artifact-name: ${{ needs.yukon-build.outputs.artifact-name }}
    secrets: inherit

  #
  # Deploy artifacts to GitHub Releases
  #
  deploy-to-gh-releases:
    name: Deploy
    needs: yukon-build
    uses: ./.github/workflows/deploy-to-gh-releases.yml
